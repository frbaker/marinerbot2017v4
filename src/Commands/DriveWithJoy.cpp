// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveWithJoy.h"
#include <AHRS.h>
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
AHRS *ahrs;
DriveWithJoy::DriveWithJoy(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void DriveWithJoy::Initialize() {
	Robot::driveTrain->stop();


	ahrs = new AHRS(SPI::Port::kMXP);
	//RobotMap::driveGyro->Reset();
	RobotMap::drivegyro->ZeroYaw();
}
//for Gunnar
// Called repeatedly when this Command is scheduled to run
void DriveWithJoy::Execute() {


	SmartDashboard::PutNumber("Drive Angle", RobotMap::drivegyro->GetAngle());
	//double mrAngle = RobotMap::driveGyro->GetYaw();
	//Robot::driveTrain->takeJoystickInputs(Robot::oi->getJoystick1()->GetRawAxis(0), Robot::oi->getJoystick1()->GetRawAxis(1)*-1,Robot::oi->getJoystick1()->GetRawAxis(2), RobotMap::drivegyro->GetAngle()); original stuff that kinda works
	//Robot::driveTrain->takeJoystickInputs(Robot::oi->getJoystick1()->GetRawAxis(0), Robot::oi->getJoystick1()->GetRawAxis(1)*-1,Robot::oi->getJoystick1()->GetRawAxis(2), 0.0);
	Robot::driveTrain->takeJoystickInputs(Robot::oi->getJoystick1()->GetRawAxis(2), Robot::oi->getJoystick1()->GetRawAxis(1)*-1,Robot::oi->getJoystick1()->GetRawAxis(0), RobotMap::drivegyro->GetAngle());
	//Robot::driveTrain->takeJoystickInputs(0.0, 0.0, 0.0, 0.0);
	/*SmartDashboard::PutNumber("Drive Yaw", RobotMap::driveGyro->GetYaw());
	SmartDashboard::PutNumber("Drive Temp", RobotMap::driveGyro->GetTempC());
	SmartDashboard::PutNumber("Drive Compas", RobotMap::driveGyro->GetCompassHeading());
	SmartDashboard::PutNumber("A Gyro", RobotMap::agyro->GetAngle());
	SmartDashboard::PutNumber("RB Gyro", RobotMap::driveTrainRbGyro->GetAngle());
	*/
	//SmartDashboard::PutNumber("Drive A Gyro", RobotMap::driveAgyro->GetAngle());
	//SmartDashboard::PutNumber("Drive A Gyro", ahrs->GetAngle());


}
void DriveWithJoy::End() {
	Robot::driveTrain->stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveWithJoy::Interrupted() {
	Robot::driveTrain->stop();
}
// Make this return true when this Command no longer needs to run execute()
bool DriveWithJoy::IsFinished() {
    return false;
}

